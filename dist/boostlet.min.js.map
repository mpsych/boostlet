{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQO,MAAM;IAEX,OAAO,mBAAmB;QAExB,IAAI,YAAY;QAEhB,IAAI,KAAK,UAAU,CAAC,OAAO,EAAE,GAE3B,YAAY,IAAI,CAAA,GAAA,aAAK,EAAE,OAAO,EAAE;aAE3B,IAAI,KAAK,UAAU,CAAC,OAAO,MAAM,GAEtC,YAAY,IAAI,CAAA,GAAA,aAAK,EAAE,OAAO,MAAM;aAE/B,IAAI,KAAK,UAAU,CAAC,OAAO,WAAW,GAE3C,YAAY,IAAI,CAAA,GAAA,oBAAY,EAAE,OAAO,WAAW;aAE3C,IAAI,KAAK,UAAU,CAAC,OAAO,CAAC,GAEjC,YAAY,IAAI,CAAA,GAAA,UAAE,EAAE,OAAO,CAAC;aAEvB,IAAI,KAAK,UAAU,CAAC,OAAO,aAAa,GAE7C,YAAY,IAAI,CAAA,GAAA,oBAAY,EAAE,OAAO,aAAa;aAE7C,IAAI,KAAK,UAAU,CAAC,OAAO,gBAAgB,GAEhD,YAAY,IAAI,CAAA,GAAA,aAAK,EAAE,OAAO,gBAAgB;aAEzC;YACL,kBAAkB;YAElB,QAAQ,GAAG,CAAC;YACZ,YAAY,IAAI,CAAA,GAAA,qBAAa;QAE/B;QAEA,OAAO;IAET;IAEA,aAAa,YAAY,GAAG,EAAE,QAAQ,EAAE;QAEtC,iDAAiD;QACjD,OAAO,MAAM,CAAC,cAAc,CAAC,OAAO,MAAM,CAAC,SAAS,EAAE,UAAU;YAC9D;gBACE,OAAO;YACT;YACA,KAAI,SAAS;gBACX,aAAa;YACf;QACF;QAEA,MAAM,SAAS,OAAO,QAAQ,CAAC,aAAa,CAAC;QAC7C,OAAO,IAAI,GAAG;QACd,OAAO,GAAG,GAAG;QAEb,IAAI,KAAK,UAAU,CAAC,WAClB,OAAO,MAAM,GAAG;QAGlB,OAAO,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;QACjC,KAAK;IAEP;IAEA,aAAa,eAAe,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;QAE/C,IAAI,MAAM,IAAI;QACd,IAAI,IAAI,CAAC,QAAQ;QACjB,IAAI,kBAAkB,GAAG;YACvB,IAAI,IAAI,UAAU,KAAK,GAAG;gBACxB,eAAe;gBACf,SAAU,IAAI,QAAQ;gBAEtB;YAEF;QACF;QAEA,IAAI,IAAI,CAAC;IAEX;IAEA,OAAO,eAAe,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;QAErD,4CAA4C;QAC5C,IAAI,YAAY,OAAO,QAAQ,CAAC,aAAa,CAAC;QAC9C,UAAU,KAAK,GAAG;QAClB,UAAU,MAAM,GAAG;QAEnB,IAAI,gBAAgB,UAAU,UAAU,CAAC;QAEzC,IAAI,UAAU,cAAc,eAAe,CAAC,UAAU,KAAK,EAAE,UAAU,MAAM;QAC7E,IAAI,SAAS,QAAQ,IAAI;QAEzB,IAAK,IAAI,IAAG,GAAG,IAAE,OAAO,MAAM,EAAC,IAE7B,MAAM,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE;QAGzB,8BAA8B;QAChC,cAAc,YAAY,CAAC,SAAS,GAAG;QAGvC,IAAI,MAAM;YAER,cAAc,IAAI;YAClB,cAAc,KAAK,CAAC,GAAG,KAAK,kBAAkB;YAC9C,cAAc,SAAS,CAAC,WAAW,GAAG,CAAC;YACvC,cAAc,OAAO;QAEvB;QAEA,IAAI,SAAS,UAAU,SAAS,CAAC;QAEjC,gCAAgC;QAChC,mDAAmD;QACnD,sBAAsB;QACtB,8BAA8B;QAC9B,gBAAgB;QAEhB,SAAS,OAAO,OAAO,CAAC,0BAAyB;QAEjD,IAAI,YAAY,WAAW,IAAI,CAAC,KAAK,SAAS,CAAC,IAAM,EAAE,UAAU,CAAC;QAElE,OAAO;IAET;IAEA,OAAO,OAAO,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;QAE3C,MAAM,aAAa,KAAK,IAAI,CAAC,OAAO,MAAM;QAC1C,MAAM,iBAAiB,KAAK,KAAK,CAAC,aAAa;QAE/C,MAAM,aAAa,OAAO,KAAK;QAE/B,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;YAC9B,MAAM,WAAW,IAAI,QAAQ;YAE7B,IAAI,WAAW;YACf,IAAK,IAAI,KAAK,GAAG,KAAK,YAAY,KAChC,IAAK,IAAI,KAAK,GAAG,KAAK,YAAY,KAAM;gBACtC,MAAM,OAAO,IAAI,KAAK;gBACtB,MAAM,OAAO,IAAI,KAAK;gBACtB,MAAM,WAAW,OAAO,QAAQ;gBAEhC,MAAM,cAAc,MAAM,CAAC,KAAK,aAAa,GAAG;gBAChD,YAAY,MAAM,CAAC,SAAS,GAAG;YACjC;YAGF,UAAU,CAAC,SAAS,GAAG;QAEzB;QAGF,OAAO;IAET;IAEA,OAAO,kBAAkB,SAAS,EAAE;QAElC,MAAM,OAAO,IAAI,WAAW,UAAU,MAAM,GAAG;QAE/C,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;YACzC,MAAM,IAAI,SAAS,CAAC,EAAE;YACtB,MAAM,QAAQ,IAAI;YAElB,IAAI,CAAC,MAAM,GAAG;YACd,IAAI,CAAC,QAAQ,EAAE,GAAG;YAClB,IAAI,CAAC,QAAQ,EAAE,GAAG;YAClB,IAAI,CAAC,QAAQ,EAAE,GAAG;QACpB;QAEA,OAAO;IAET;IAEA,OAAO,kBAAkB,IAAI,EAAE;QAE7B,MAAM,YAAY,IAAI,WAAW,KAAK,MAAM,GAAG;QAE/C,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,KAAK,EAEpC,SAAS,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE;QAI5B,OAAO;IAET;IAEA;;;;;;;;;IASE,GACF,OAAO,YAAY,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE;QAE1C,8JAA8J;QAC9J,qDAAqD;QACrD,uBAAuB;QAGvB,IAAI,aAAa;YAAC;YAAG;YAAK;YAAK;SAAI;QAEnC,IAAI,KAAK,UAAU,CAAC,YAElB,aAAa;QAIf,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAE/B,IAAI,IAAI,CAAC,EAAE,GAAG,KAAK;YACjB,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE;YACjC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE;YACjC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE;YACjC,MAAM,CAAC,IAAI,IAAI,EAAE,GAAG,UAAU,CAAC,EAAE;QACnC;QAIF,OAAO;IAET;IAEA,OAAO,WAAW,QAAQ,EAAE;QAE1B,OAAQ,OAAO,YAAY;IAE7B;IAEA,qHAAqH;IACrH,OAAO,KAAK,OAAO,EAAE,QAAQ,EAAE;QAE7B,IAAI,OAAO,OAAO,QAAQ,CAAC,aAAa,CAAC;QACzC,KAAK,EAAE,GAAG;QAEV,KAAK,KAAK,CAAC,QAAQ,GAAG;QACtB,KAAK,KAAK,CAAC,IAAI,GAAG;QAClB,KAAK,KAAK,CAAC,GAAG,GAAG;QACjB,KAAK,KAAK,CAAC,OAAO,GAAG;QACrB,KAAK,KAAK,CAAC,UAAU,GAAG;QACxB,KAAK,KAAK,CAAC,KAAK,GAAG;QACnB,KAAK,KAAK,CAAC,MAAM,GAAG;QACpB,KAAK,KAAK,CAAC,MAAM,GAAG;QACpB,KAAK,KAAK,CAAC,YAAY,GAAG;QAC1B,KAAK,KAAK,CAAC,SAAS,GAAG;QACvB,KAAK,KAAK,CAAC,QAAQ,GAAG;QACtB,KAAK,KAAK,CAAC,UAAU,GAAG;QACxB,KAAK,KAAK,CAAC,SAAS,GAAG;QAEvB,KAAK,SAAS,GAAG;QAEjB,OAAO,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;QAEjC,IAAI,OAAO,aAAa,YAAY,WAAW,GAC7C,WAAW;YACT,KAAK,MAAM;QACb,GAAG;IAGP;AAEF;;;;;;;;ACvRO,MAAM;IAEX,YAAY,QAAQ,CAAE;QAEpB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,QAAQ,GAAG;QAEhB,IAAI,CAAC,WAAW,GAAG;IAErB;IAEA,UAAU,WAAW,EAAE;QAErB,MAAM;IAER;IAEA,UAAU,UAAU,EAAE;QAEpB,MAAM;IAER;IAEA,SAAS,QAAQ,EAAE;QAEjB,MAAM;IAER;IAEA,WAAW,QAAQ,EAAE;QAEnB,MAAM;IAER;IAEA,eAAe,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE;QAExC,OAAO,CAAA,GAAA,WAAG,EAAE,cAAc,CAAC,YAAY,OAAO,QAAQ,IAAI,CAAC,WAAW;IAExE;AAEF;;;;;;;;;;;;ACrCO,MAAM,kDAAsB,CAAA,GAAA,gBAAQ;IAEzC,YAAY,QAAQ,CAAE;QAEpB,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAA,GAAA,qBAAa;QAEvC,IAAI,CAAC,yBAAyB,GAAG;QAEjC,IAAI,OAAO,OAAO,gBAAgB,IAAI,aAEpC,+BAA+B;QAC/B,IAAI,CAAC,yBAAyB,GAAG,OAAO,gBAAgB;QAI1D,IAAI,CAAC,WAAW,GAAG;IAErB;IAEA,UAAU,WAAW,EAAE;QAErB,IAAI,UAAU,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,EAAE;QACnD,IAAI,SAAS;QACb,IAAI,QAAQ;QACZ,IAAI,SAAS;QAEb,IAAI,OAAO,eAAe,aAAa;YAErC,8CAA8C;YAC9C,yCAAyC;YAEzC,IAAI,SAAS,QAAQ,MAAM;YAC3B,QAAQ,OAAO,KAAK;YACpB,SAAS,OAAO,MAAM;YAEtB,IAAK,MAAM,OAAO,UAAU,CAAC;YAE7B,IAAI,YAAY,IAAI,YAAY,CAAC,GAAG,GAAG,OAAO;YAC9C,SAAS,UAAU,IAAI;QAEzB,OAAO;YAEL,oCAAoC;YACpC,IAAI,YAAY,QAAQ,KAAK;YAC7B,SAAS,UAAU,YAAY;YAC/B,QAAQ,UAAU,KAAK;YACvB,SAAS,UAAU,MAAM;QAE3B;QAEA,OAAO;YAAC,QAAO;YAAQ,SAAQ;YAAO,UAAS;QAAM;IAEvD;IAEA,UAAU,UAAU,EAAE;QAEpB,IAAI,UAAU,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,EAAE;QACnD,IAAI,SAAS,QAAQ,KAAK,CAAC,YAAY;QAEvC,2BAA2B;QAC3B,OAAO,GAAG,CAAC;QAEX,8BAA8B;QAC9B,YAAY,oBAAoB,CAAC,SAAS;IAE5C;IAEA,SAAS,QAAQ,EAAE;QACjB,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;IAEtC;IAEA,WAAW,QAAQ,EAAE;QAEnB,IAAG,IAAI,CAAC,yBAAyB,CAAC,gBAAgB,KAAK,WAAW;YAChE,QAAQ,GAAG,CAAC;YACZ,IAAI,UAAU,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,EAAE;YACnD,IAAI,SAAS,QAAQ,MAAM;YAE3B,wBAAwB;YACxB,iBAAiB,eAAe,CAAC;YAEjC,SAAS,mBAAmB,CAAC,QAAQ,SAAU,OAAO,EAAE,WAAW;gBACjE,SAAS,SAAS;YACpB;YAEA,SAAS,mBAAmB,CAAC,QAAQ,SAAS,OAAO,EAAE,WAAW;gBAChE,QAAQ,GAAG,CAAC,yBAAwB,SAAS;gBAC7C,SAAS,SAAS;YACpB;QAEA,mDAAmD;QAGrD,OACI;YACF,QAAQ,GAAG,CAAC;YACZ,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,gBAAgB;gBAC3D,iBAAiB;YACnB;YAEA,IAAI,UAAU,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,EAAE;YACnD,IAAI,SAAS,QAAQ,MAAM;YAE3B,OAAO,SAAS,GAAG,CAAA;gBACjB,IAAI,QACF,IAAI,CAAC,yBAAyB,CAAC,qCAAqC,CAAC,aAAa;gBAEpF,IAAI,UACF,KAAK,CAAC,OAAO,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK;gBACpE,IAAI,cACF,KAAK,CAAC,OAAO,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG;gBAElE,IAAI,YAAY,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,OAAO,EAAE;gBAC7D,IAAI,gBAAgB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAC7C,QAAQ,OAAO,EACf;gBAGF,IAAI,CAAC,yBAAyB,CAAC,cAAc,CAC3C,QAAQ,OAAO,EACf;gBAEF,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,SAAS;gBAC5C,SAAS,WAAW;YACtB,CAAA,EAAE,IAAI,CAAC,IAAI;QACb;IAEF;AAEF;;;;;;;;;;ACpIO,MAAM,kDAAuB,CAAA,GAAA,gBAAQ;IAC1C,aAAc;QACZ,KAAK;QACL,IAAI,CAAC,IAAI,GAAG;IACd;IAEA,aAAa;QACX,IAAI,WAAW,SAAS,gBAAgB,CAAC;QACzC,IAAI,gBAAgB,QAAQ,CAAC,EAAE;QAC/B,IAAI,cAAc,cAAc,KAAK,GAAG,cAAc,MAAM;QAE5D,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAK;YACtC,IAAI,OAAO,QAAQ,CAAC,EAAE,CAAC,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAC,MAAM;YACjD,IAAI,OAAO,aAAa;gBACpB,gBAAgB,QAAQ,CAAC,EAAE;gBAC3B,cAAc;YAClB;QACJ;QAEA,OAAO;IACT;IAEA,UAAU,WAAW,EAAE;QAErB,IAAI,SAAS,IAAI,CAAC,UAAU;QAE5B,IAAI,MAAM,OAAO,UAAU,CAAC;QAE5B,IAAI,QAAQ,IAAI,YAAY,CAAC,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;QAC9D,IAAI,aAAa,CAAA,GAAA,WAAG,EAAE,iBAAiB,CAAC,MAAM,IAAI;QAElD,IAAI,aACF,OAAO;YAAE,MAAM,MAAM,IAAI;YAAE,OAAO,MAAM,KAAK;YAAE,QAAQ,MAAM,MAAM;QAAC;aAEpE,OAAO;YAAE,MAAM;YAAY,OAAO,MAAM,KAAK;YAAE,QAAQ,MAAM,MAAM;QAAC;IAExE;IAEA,UAAU,UAAU,EAAE;QACpB,IAAI,iBAAiB,IAAI,CAAC,UAAU;QAEpC,IAAI,YAAY,OAAO,QAAQ,CAAC,aAAa,CAAC;QAE9C,UAAU,KAAK,GAAG,eAAe,KAAK;QACtC,UAAU,MAAM,GAAG,eAAe,MAAM;QAExC,IAAI,MAAM,UAAU,UAAU,CAAC;QAE/B,IAAI,gBAAgB,CAAA,GAAA,WAAG,EAAE,iBAAiB,CAAC;QAE3C,IAAI,mBAAmB,IAAI,kBAAkB;QAE7C,IAAI,eAAe,IAAI,UACrB,kBACA,UAAU,KAAK,EACf,UAAU,MAAM;QAGlB,0CAA0C;QAC1C,IAAI,YAAY,CAAC,cAAc,GAAG;QAElC,UAAU,OAAO,GAAG;YAClB,0CAA0C;YAC1C,UAAU,UAAU,CAAC,YAAY,CAAC,gBAAgB;QACpD;QAEA,iCAAiC;QACjC,eAAe,UAAU,CAAC,YAAY,CAAC,WAAW;IACpD;IAEA,SAAS,QAAQ,EAAE;QACjB,IAAI,QAAQ,IAAI,CAAC,SAAS,CAAC;QAE3B,IAAI,iBAAiB,IAAI,CAAC,UAAU;QAEpC,IAAI,YAAY,OAAO,QAAQ,CAAC,aAAa,CAAC;QAE9C,UAAU,KAAK,GAAG,eAAe,KAAK;QACtC,UAAU,MAAM,GAAG,eAAe,MAAM;QAExC,IAAI,MAAM,UAAU,UAAU,CAAC;QAE/B,IAAI,eAAe,IAAI,kBAAkB,MAAM,IAAI;QAEnD,IAAI,eAAe,IAAI,UACrB,cACA,UAAU,KAAK,EACf,UAAU,MAAM;QAGlB,0CAA0C;QAC1C,IAAI,YAAY,CAAC,cAAc,GAAG;QAElC,QAAQ,IAAI,YAAY,CAAC,GAAG,GAAG,UAAU,KAAK,EAAE,UAAU,MAAM;QAEhE,IAAI,eAAe,CAAA,GAAA,WAAG,EAAE,WAAW,CAAC,MAAM,IAAI,EAAE;QAEhD,IAAI,4BAA4B,IAAI,UAClC,cACA,UAAU,KAAK,EACf,UAAU,MAAM;QAGlB,IAAI,YAAY,CAAC,2BAA2B,GAAG;QAE/C,eAAe,UAAU,CAAC,YAAY,CAAC,WAAW;IACpD;IAEA,WAAW,QAAQ,EAAE;QACnB,IAAI,iBAAiB,SAAS,aAAa,CAAC;QAC5C,eAAe,IAAI,GAAG;QACtB,eAAe,GAAG,GAAG;QACrB,uFAAuF;QACvF,uFAAuF;QACvF,qEAAqE;QACrE,IAAI,SAAS,IAAI,CAAC,UAAU;QAC5B,SAAS,IAAI,CAAC,WAAW,CAAC;QAE1B,eAAe,MAAM,GAAG;YAEtB,SAAS,mBAAmB,CAAC,QAAQ,SAAU,OAAO,EAAE,WAAW;gBACjE,QAAQ,GAAG,CAAC,yBAAyB,SAAS;gBAC9C,SAAS,SAAS;YACpB;QACF;IAEF;AAEF;;;;;;;;;;;;;;ACjIO,MAAM,kDAAe,CAAA,GAAA,gBAAQ;IAElC,YAAY,QAAQ,CAAE;QAEpB,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAA,GAAA,qBAAa;QAEvC,IAAI,CAAC,WAAW,GAAG;QAEnB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,EAAE,GAAG;QACV,IAAI,CAAC,EAAE,GAAG;QACV,IAAI,CAAC,EAAE,GAAG;QACV,IAAI,CAAC,EAAE,GAAG;IAEZ;IAEA,UAAU,WAAW,EAAE;QAErB,IAAI,UAAU,IAAI,CAAC,QAAQ,CAAC,MAAM;QAClC,IAAI,SAAS;QACb,IAAI,QAAQ;QACZ,IAAI,SAAS;QAGb,8CAA8C;QAC9C,yCAAyC;QAEzC,IAAI,qBAAqB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc;QAC1D,IAAI,qBAAqB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc;QAE1D,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;YAAC;YAAE;YAAE;YAAE;SAAE;QACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,GAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,cAAc;QAG5B,IAAI,MAAM,IAAI,CAAC,QAAQ,CAAC,EAAE;QAG1B,QAAQ,IAAI,kBAAkB;QAC9B,SAAS,IAAI,mBAAmB;QAEhC,SAAS,IAAI,WAAW,QAAQ,SAAS;QACzC,IAAI,UAAU,CACZ,GACA,GACA,OACA,QACA,IAAI,IAAI,EACR,IAAI,aAAa,EACjB;QAEF,qBAAqB;QACrB,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;QAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,GAAG;QAEpC,IAAI,CAAC,CAAA,GAAA,WAAG,EAAE,UAAU,CAAC,cAEnB,mCAAmC;QACnC,SAAS,CAAA,GAAA,WAAG,EAAE,iBAAiB,CAAC;QAelC,OAAO;YAAC,QAAO;YAAQ,SAAQ;YAAO,UAAS;QAAM;IAEvD;IAEA;;;;IAIE,GACF,UAAU,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE;QAEtC,iEAAiE;QACjE,oBAAoB;QACpB,uBAAuB;QACvB,cAAc;QACd,gBAAgB;QAEhB,IAAI,iBAAiB,IAAI,CAAC,QAAQ,CAAC,MAAM;QAEzC,IAAI,YAAY,OAAO,QAAQ,CAAC,aAAa,CAAC;QAC9C,UAAU,KAAK,GAAG,eAAe,KAAK;QACtC,UAAU,MAAM,GAAG,eAAe,MAAM;QAExC,sBAAsB;QACtB,IAAI,MAAM,UAAU,UAAU,CAAC;QAE/B,IAAI,kBAAkB;QAEtB,IAAI,CAAA,GAAA,WAAG,EAAE,UAAU,CAAC,UAElB,kBAAkB;aAIlB,kBAAkB,CAAA,GAAA,WAAG,EAAE,iBAAiB,CAAC;QAK3C,IAAI,qBAAqB,IAAI,kBAAkB;QAE/C,IAAI,iBAAiB,IAAI,UAAU,oBAAoB,UAAU,KAAK,EAAE,UAAU,MAAM;QAGxF,IAAI,YAAY,CAAC,gBAAgB,GAAG;QAEpC,IAAI,CAAC,CAAA,GAAA,WAAG,EAAE,UAAU,CAAC,UAAU;YAC7B,uBAAuB;YACvB,IAAI,IAAI;YACR,IAAI,KAAK,CAAC,GAAG;YACb,IAAI,SAAS,CAAC,WAAW,GAAG,CAAC,UAAU,MAAM;YAC7C,IAAI,OAAO;QACb;QAGA,UAAU,OAAO,GAAG;YAElB,0CAA0C;YAC1C,UAAU,UAAU,CAAC,YAAY,CAAC,gBAAgB;QAEpD;QAEA,iCAAiC;QACjC,qEAAqE;QACrE,UAAU,KAAK,CAAC,KAAK,GAAG,eAAe,WAAW,GAAC;QACnD,UAAU,KAAK,CAAC,MAAM,GAAG,eAAe,YAAY,GAAC;QACrD,eAAe,UAAU,CAAC,YAAY,CAAC,WAAW;IAEpD;IAEA,SAAS,QAAQ,EAAE;QAEjB,qBAAqB;QACrB,gDAAgD;QAEhD,IAAI,QAAQ,IAAI,CAAC,SAAS,CAAC;QAE3B,yDAAyD;QACzD,uDAAuD;QACvD,uBAAuB;QACvB,IAAI,iBAAiB,IAAI,CAAC,QAAQ,CAAC,MAAM;QAEzC,IAAI,YAAY,OAAO,QAAQ,CAAC,aAAa,CAAC;QAC9C,UAAU,KAAK,GAAG,eAAe,KAAK;QACtC,UAAU,MAAM,GAAG,eAAe,MAAM;QACxC,sBAAsB;QACtB,IAAI,MAAM,UAAU,UAAU,CAAC;QAC/B,IAAI,eAAe,IAAI,kBAAkB,MAAM,IAAI;QACnD,IAAI,YAAY,IAAI,UAAU,cAAc,MAAM,KAAK,EAAE,MAAM,MAAM;QACrE,IAAI,YAAY,CAAC,WAAW,GAAG;QAC/B,IAAI,IAAI;QACR,IAAI,KAAK,CAAC,GAAG;QACb,IAAI,SAAS,CAAC,WAAW,GAAG,CAAC,UAAU,MAAM;QAC7C,IAAI,OAAO;QACX,QAAQ,IAAI,YAAY,CAAC,GAAG,GAAG,UAAU,KAAK,EAAE,UAAU,MAAM;QAChE,cAAc;QAEd,IAAI,eAAe,CAAA,GAAA,WAAG,EAAE,WAAW,CAAC,MAAM,IAAI,EAAE;QAEhD,IAAI,CAAC,SAAS,CAAC,cAAc,MAAM,OAAO,qBAAqB;IAGjE;IAEA,WAAW,QAAQ,EAAE;QACnB,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;IAExC;AAEF;;;;;;;;;;;;;ACvLO,MAAM,gDAAsB,CAAA,GAAA,gBAAQ;IACvC,YAAY,QAAQ,CAAE;QAClB,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAA,GAAA,qBAAa;IAE3C;IAEA,UAAU,WAAW,EAAE;QACnB,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;IACzC;IAEA,UAAU,UAAU,EAAE;QAClB,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;IACzC;IAEA,SAAS,QAAQ,EAAE;QACf,iDAAiD;QAEjD,IAAI,SAAS;QACb,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ;QAC/B,GAAG,OAAO,CAAC,SAAU,CAAC;YACpB,IAAI,EAAE,EAAE,IAAI,UACV,SAAS;QAEb;QAEA,IAAI,CAAC,QACH,MAAM;QAGR,IAAI,SAAS,OAAO,MAAM,CAAC,QAAQ,CAAC,EAAE;QACtC,QAAQ,OAAO,KAAK;QACpB,SAAS,OAAO,MAAM;QAEtB,IAAI,MAAM,OAAO,UAAU,CAAC;QAC5B,IAAI,YAAY,IAAI,YAAY,CAAC,GAAG,GAAG,OAAO;QAC9C,IAAI,SAAS,UAAU,IAAI;QAE3B,IAAI,eAAe,CAAA,GAAA,WAAG,EAAE,WAAW,CAAC,QAAQ;QAC5C,IAAI,4BAA4B,IAAI,UAAU,cAAc,OAAO;QACnE,IAAI,YAAY,CAAC,2BAA2B,GAAG;IACnD;IAEA,WAAW,QAAQ,EAAE;QAEnB,QAAQ,GAAG,CAAC;QACZ,IAAI,SAAS;QACb,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ;QAC/B,GAAG,OAAO,CAAC,SAAU,CAAC;YACpB,IAAI,EAAE,EAAE,IAAI,UACV,SAAS;QAEb;QAEA,IAAI,CAAC,QACH,MAAM;QAGR,IAAI,SAAS,OAAO,MAAM;QAE1B,SAAS,mBAAmB,CAAC,QAAQ,SAAU,OAAO,EAAE,WAAW;YACjE,SAAS,SAAS;QACpB;IAEF;AAIJ;;;;;;;;;;;;ACrEO,MAAM,kDAAY,CAAA,GAAA,gBAAQ;IAC/B,YAAY,QAAQ,CAAE;QACpB,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAA,GAAA,qBAAa;IACzC;IAEA,UAAU,WAAW,EAAE;QACrB,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;IACvC;IAEA,UAAU,UAAU,EAAE;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;IACvC;IAEA,SAAS,QAAQ,EAAE;QACjB,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;IACtC;IAEA,WAAW,QAAQ,EAAE;QACnB,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;IACxC;AACF;;;;;;;;;;;;ACtBO,MAAM,kDAAe,CAAA,GAAA,gBAAQ;IAClC,YAAY,QAAQ,CAAE;QACpB,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAA,GAAA,qBAAa;IACzC;IAEA,UAAU,WAAW,EAAE;QACrB,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;IACvC;IAEA,UAAU,UAAU,EAAE;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;IACvC;IAEA,SAAS,QAAQ,EAAE;QACjB,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;IACtC;IAEA,WAAW,QAAQ,EAAE;QACnB,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;IACxC;AACF;;;;;;;;AExBO,MAAM;IAEX,aAAc;QACZ,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,UAAU,GAAG,EAAE;QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI;IACtB;IAEA;;;;;;;;;GASC,GACD,KAAK,IAAI,EAAE,QAAQ,EAAE;QAEnB,IAAI,OAAO,QAAQ,eAAe,OAAO,YAAY,aAAa;YAEhE,QAAQ,GAAG,CAAC;YACZ,MAAM;QACN,OAAO;QAET,OAEE,IAAI,CAAC,SAAS,GAAG,CAAA,GAAA,WAAG,EAAE,gBAAgB;QAIxC,IAAI,IAAI,CAAC,SAAS,EAEhB,QAAQ,GAAG,CAAC,SAAS,IAAI,CAAC,SAAS,EAAE;aAIrC,MAAM;IAIV;IAEA;;GAEC,GACD,MAAM,WAAW,QAAQ,EAAE;QAEzB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;IAE5B;IAEA;;GAEC,GACD,MAAM,YAAY,OAAO,EAAE;QAEzB,MAAM;IAER;IAEA;;GAEC,GACD,MAAM,YAAY,GAAG,EAAE,QAAQ,EAAE;QAE/B,CAAA,GAAA,WAAG,EAAE,WAAW,CAAC,KAAK;IAExB;IAEA;;GAEC,GACD,MAAM,eAAe,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;QAExC,CAAA,GAAA,WAAG,EAAE,cAAc,CAAC,KAAK,MAAM;IAEjC;IAEA;;;;;GAKC,GACD,UAAU,WAAW,EAAE;QAErB,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;IAElC;IAEA;;;GAGC,GACD,UAAU,UAAU,EAAE;QAEpB,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;IAElC;IAEA;;;GAGC,GACD,SAAS,QAAQ,EAAE;QAEjB,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;IAEjC;IAEA;;GAEC,GACD,eAAe,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE;QAExC,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,YAAY,OAAO;IAE1D;IAEA,OAAO,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;QAEpC,OAAO,CAAA,GAAA,WAAG,EAAE,MAAM,CAAC,QAAQ,OAAO,QAAQ;IAE5C;IAEA;;;GAGC,GACD,KAAK,OAAO,EAAE,QAAQ,EAAE;QAEtB,OAAO,CAAA,GAAA,WAAG,EAAE,IAAI,CAAC,SAAS;IAE5B;AAEF;;;AD1IA,OAAO,OAAO,CAAC,GAAG,CAAC;AAEnB,yDAAyD;AACzD,2DAA2D;AAC3D,OAAO,QAAQ,GAAG,IAAI,CAAA,GAAA,wCAAO","sources":["src/util.js","src/framework.js","src/frameworks/cornerstone2d.js","src/frameworks/canvasFallback.js","src/frameworks/niivue.js","src/frameworks/openseadragon.js","src/frameworks/xtk.js","src/frameworks/papaya.js","src/index.js","src/boostlet.js"],"sourcesContent":["import {Framework} from './framework.js';\r\nimport {Cornerstone2D} from './frameworks/cornerstone2d.js';\r\nimport {NiiVue} from './frameworks/niivue.js';\r\nimport { OpenSeaDragon } from './frameworks/openseadragon.js';\r\nimport { Xtk } from './frameworks/xtk.js';\r\nimport { Papaya } from './frameworks/papaya.js';\r\nimport { CanvasFallback } from './frameworks/canvasFallback.js';\r\n\r\nexport class Util {\r\n  \r\n  static detect_framework() {\r\n\r\n    let framework = null;\r\n\r\n    if (Util.is_defined(window.nv)) {\r\n    \r\n      framework = new NiiVue(window.nv);\r\n    \r\n    } else if (Util.is_defined(window.niivue)) {\r\n      \r\n      framework = new NiiVue(window.niivue);\r\n\r\n    } else if (Util.is_defined(window.cornerstone)) {\r\n\r\n      framework = new Cornerstone2D(window.cornerstone);\r\n\r\n    } else if (Util.is_defined(window.r)) {\r\n        \r\n      framework = new Xtk(window.r);\r\n      \r\n    } else if (Util.is_defined(window.OpenSeadragon)) {\r\n\r\n      framework = new OpenSeaDragon(window.OpenSeadragon);\r\n      \r\n    } else if (Util.is_defined(window.papayaContainers)) {\r\n      \r\n      framework = new Papaya(window.papayaContainers)\r\n\r\n    } else {\r\n      // Canvas fallback\r\n      \r\n      console.log(\"No framework detected, falling back to canvas rendering\");\r\n      framework = new CanvasFallback();\r\n      \r\n    }\r\n\r\n    return framework;\r\n\r\n  }\r\n\r\n  static async load_script(url, callback) {\r\n\r\n    // introducing hack to make it work for openneuro\r\n    window.Object.defineProperty(window.Object.prototype, 'global', {\r\n      get( ){\r\n        return window;\r\n      },\r\n      set(newGlobal) {\r\n        globalThis = newGlobal;\r\n      }\r\n    });\r\n\r\n    const script = window.document.createElement(\"script\")\r\n    script.type = \"text/javascript\"\r\n    script.src = url;\r\n\r\n    if (Util.is_defined(callback)) {\r\n      script.onload = callback;\r\n    }\r\n\r\n    window.document.head.appendChild(script);\r\n    eval(script);\r\n\r\n  }\r\n\r\n  static async send_http_post(url, data, callback) {\r\n\r\n    let xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", url);\r\n    xhr.onreadystatechange = function () {\r\n      if (xhr.readyState === 4) {\r\n        // request done\r\n        callback( xhr.response );\r\n\r\n        return;\r\n\r\n      }\r\n    }\r\n\r\n    xhr.send(data)\r\n\r\n  }\r\n\r\n  static convert_to_png(uint8array, width, height, flip) {\r\n\r\n    // we are using an offscreen canvas for this\r\n    let offscreen = window.document.createElement('canvas');\r\n    offscreen.width = width;\r\n    offscreen.height = height;\r\n\r\n    let offscreen_ctx = offscreen.getContext('2d');\r\n\r\n    let imgdata = offscreen_ctx.createImageData(offscreen.width, offscreen.height);\r\n    let pxdata = imgdata.data;\r\n\r\n    for (var i =0; i<pxdata.length;i++) {\r\n        \r\n      pxdata[i] = uint8array[i];\r\n\r\n    }\r\n      // update canvas with new data\r\n    offscreen_ctx.putImageData(imgdata, 0, 0);\r\n    \r\n\r\n    if (flip) {\r\n\r\n      offscreen_ctx.save();\r\n      offscreen_ctx.scale(1, -1); // Flip vertically\r\n      offscreen_ctx.drawImage(offscreen, 0, -height); \r\n      offscreen_ctx.restore();\r\n\r\n    }\r\n\r\n    let base64 = offscreen.toDataURL('image/png');\r\n\r\n    // for debugging, download image\r\n    // const link = window.document.createElement(\"a\");\r\n    // link.href = base64;\r\n    // link.download = 'test.png';\r\n    // link.click();\r\n\r\n    base64 = base64.replace(\"data:image/png;base64,\",\"\");\r\n\r\n    let pngpixels = Uint8Array.from(atob(base64), (c) => c.charCodeAt(0));\r\n\r\n    return pngpixels;\r\n\r\n  }\r\n\r\n  static filter(pixels, width, height, kernel) {\r\n\r\n    const kernelSize = Math.sqrt(kernel.length);\r\n    const halfKernelSize = Math.floor(kernelSize / 2);\r\n\r\n    const new_pixels = pixels.slice();\r\n\r\n    for (let y = 0; y < height; y++) {\r\n      for (let x = 0; x < width; x++) {\r\n        const dstIndex = y * width + x;\r\n\r\n        let newValue = 0;\r\n        for (let ky = 0; ky < kernelSize; ky++) {\r\n          for (let kx = 0; kx < kernelSize; kx++) {\r\n            const srcX = x + kx - halfKernelSize;\r\n            const srcY = y + ky - halfKernelSize;\r\n            const srcIndex = srcY * width + srcX;\r\n\r\n            const kernelValue = kernel[ky * kernelSize + kx];\r\n            newValue += pixels[srcIndex] * kernelValue;\r\n          }\r\n        }\r\n\r\n        new_pixels[dstIndex] = newValue;\r\n\r\n      }\r\n    }\r\n\r\n    return new_pixels;\r\n\r\n  }\r\n\r\n  static grayscale_to_rgba(grayscale) {\r\n\r\n    const rgba = new Uint8Array(grayscale.length * 4);\r\n\r\n    for (let i = 0; i < grayscale.length; i++) {\r\n      const g = grayscale[i];\r\n      const index = i * 4;\r\n\r\n      rgba[index] = g;\r\n      rgba[index + 1] = g;\r\n      rgba[index + 2] = g;\r\n      rgba[index + 3] = 255; \r\n    }\r\n\r\n    return rgba;\r\n\r\n  }\r\n\r\n  static rgba_to_grayscale(rgba) {\r\n\r\n    const grayscale = new Uint8Array(rgba.length / 4);\r\n\r\n    for (let i = 0; i < rgba.length; i += 4) {\r\n\r\n      grayscale[i / 4] = rgba[i];\r\n\r\n    }\r\n\r\n    return grayscale;\r\n\r\n  }\r\n\r\n  /**\r\n   * Harden a mask into a grayscale pixel array.\r\n   * \r\n   * pixels needs to be RGBA\r\n   * \r\n   * and mask binary.\r\n   * \r\n   * maskcolor is optional and falls back to blue.\r\n   * \r\n   **/\r\n  static harden_mask(pixels, mask, maskcolor) {\r\n\r\n    // Modified from: https://github.com/facebookresearch/segment-anything/blob/40df6e4046d8b07ab8c4519e083408289eb43032/demo/src/components/helpers/maskUtils.tsx\r\n    // Copyright (c) Meta Platforms, Inc. and affiliates.\r\n    // All rights reserved.\r\n\r\n\r\n    let maskcolor_ = [0, 114, 189, 255];\r\n\r\n    if (Util.is_defined(maskcolor)) {\r\n      \r\n      maskcolor_ = maskcolor;\r\n      \r\n    } \r\n\r\n    for (var i = 0; i < mask.length; i++) {\r\n\r\n      if (mask[i] > 0.0) {\r\n        pixels[4 * i + 0] = maskcolor_[0];\r\n        pixels[4 * i + 1] = maskcolor_[1];\r\n        pixels[4 * i + 2] = maskcolor_[2];\r\n        pixels[4 * i + 3] = maskcolor_[3];\r\n      }\r\n\r\n    }\r\n\r\n    return pixels;\r\n\r\n  }\r\n\r\n  static is_defined(variable) {\r\n\r\n    return (typeof variable != 'undefined');\r\n\r\n  }\r\n  \r\n  // \"Boostlet Tooltips\" - This is a hint mechanism that allows to display a message for a certain amount of time (ms).\r\n  static hint(message, duration) {\r\n\r\n    let hint = window.document.createElement('div');\r\n    hint.id = 'BoostletHint';\r\n\r\n    hint.style.position = 'fixed';\r\n    hint.style.left = '10px';\r\n    hint.style.top = '10px';\r\n    hint.style.padding = '10px';\r\n    hint.style.background = '#fff';\r\n    hint.style.color = '#000';\r\n    hint.style.zIndex = '100000';\r\n    hint.style.border = '1px solid #007ec6';\r\n    hint.style.borderRadius = '5px';\r\n    hint.style.boxShadow = '0px 0px 20px 5px rgba(0,0,0, 0.3)';\r\n    hint.style.fontSize = '14px';\r\n    hint.style.fontWeight = 'bold';\r\n    hint.style.textAlign = 'center';\r\n\r\n    hint.innerHTML = message;\r\n    \r\n    window.document.body.appendChild(hint);\r\n\r\n    if (typeof duration === 'number' && duration > 0) {\r\n      setTimeout(function() {\r\n        hint.remove();\r\n      }, duration);\r\n    }\r\n\r\n  }\r\n\r\n}","import {Util} from './util.js';\r\n\r\nexport class Framework {\r\n\r\n  constructor(instance) {\r\n\r\n    this.name = 'generic';\r\n    this.instance = instance;\r\n\r\n    this.flip_on_png = false;\r\n\r\n  }\r\n\r\n  get_image(from_canvas) {\r\n\r\n    throw \"Missing Implementation.\";\r\n\r\n  }\r\n\r\n  set_image(new_pixels) {\r\n\r\n    throw \"Missing Implementation.\";\r\n\r\n  }\r\n\r\n  set_mask(new_mask) {\r\n\r\n    throw \"Missing Implementation.\";\r\n    \r\n  }\r\n\r\n  select_box(callback) {\r\n\r\n    throw \"Missing Implementation.\";\r\n\r\n  }\r\n\r\n  convert_to_png(uint8array, width, height) {\r\n\r\n    return Util.convert_to_png(uint8array, width, height, this.flip_on_png);\r\n\r\n  }\r\n\r\n}\r\n","import {Framework} from '../framework.js';\r\n\r\nimport {Util} from '../util.js';\r\n\r\nimport {CanvasFallback} from './canvasFallback.js';\r\n\r\nexport class Cornerstone2D extends Framework {\r\n  \r\n  constructor(instance) {\r\n\r\n    super(instance);\r\n    this.name = 'cornerstone2D';\r\n    this.canvasFallback = new CanvasFallback();\r\n\r\n    this.cornerstonetools_instance = null;\r\n\r\n    if (typeof window.cornerstoneTools != 'undefined') {\r\n\r\n      // TODO probably not too robust\r\n      this.cornerstonetools_instance = window.cornerstoneTools;\r\n\r\n    }\r\n\r\n    this.flip_on_png = false;\r\n\r\n  }\r\n\r\n  get_image(from_canvas) {\r\n\r\n    let element = this.instance.getEnabledElements()[0];\r\n    let pixels = null;\r\n    let width = null;\r\n    let height = null;\r\n\r\n    if (typeof from_canvas != 'undefined') {\r\n\r\n      // TODO this is hacky going through the canvas\r\n      // later should grab the real volume data\r\n\r\n      let canvas = element.canvas;\r\n      width = canvas.width;\r\n      height = canvas.height;\r\n\r\n      let  ctx = canvas.getContext('2d');\r\n\r\n      let imagedata = ctx.getImageData(0, 0, width, height);\r\n      pixels = imagedata.data;\r\n\r\n    } else {\r\n\r\n      // this is the real image slice data\r\n      let imagedata = element.image;\r\n      pixels = imagedata.getPixelData();\r\n      width = imagedata.width;\r\n      height = imagedata.height;\r\n\r\n    }\r\n\r\n    return {'data':pixels, 'width':width, 'height':height};\r\n\r\n  }\r\n\r\n  set_image(new_pixels) {\r\n\r\n    let element = this.instance.getEnabledElements()[0];\r\n    let pixels = element.image.getPixelData();\r\n\r\n    // Set the new pixel values\r\n    pixels.set(new_pixels);\r\n\r\n    // Re-render the current slice\r\n    cornerstone.renderGrayscaleImage(element, true);\r\n\r\n  }\r\n\r\n  set_mask(new_mask) {\r\n    return this.canvasFallback.set_mask(new_mask);\r\n    \r\n  }\r\n\r\n  select_box(callback) {\r\n\r\n    if(this.cornerstonetools_instance.RectangleRoiTool === undefined) {\r\n      console.log(\"Using Boxcraft library to handle box selection.\");\r\n      let element = this.instance.getEnabledElements()[0];\r\n      let canvas = element.canvas;\r\n\r\n      // Disable the Wwwc tool\r\n      cornerstoneTools.setToolDisabled(\"Wwwc\");\r\n\r\n      BoxCraft.createDraggableBBox(canvas, function (topleft, bottomright) {\r\n        callback(topleft, bottomright);\r\n      });\r\n\r\n      BoxCraft.createResizableBBox(canvas, function(topleft, bottomright) {\r\n        console.log(\"Inside Draggable BBox\",topleft, bottomright);\r\n        callback(topleft, bottomright);\r\n      });\r\n\r\n      // return this.canvasFallback.select_box(callback);\r\n\r\n\r\n    }\r\n    else{\r\n      console.log(\"Using Cornerstonetools to handle box selection.\");\r\n      this.cornerstonetools_instance.setToolActive(\"RectangleRoi\", {\r\n        mouseButtonMask: 1,\r\n      });\r\n\r\n      let element = this.instance.getEnabledElements()[0];\r\n      let canvas = element.canvas;\r\n\r\n      canvas.onmouseup = function () {\r\n        let state =\r\n          this.cornerstonetools_instance.globalImageIdSpecificToolStateManager.saveToolState();\r\n\r\n        let topleft =\r\n          state[Object.keys(state).pop()].RectangleRoi.data[0].handles.start;\r\n        let bottomright =\r\n          state[Object.keys(state).pop()].RectangleRoi.data[0].handles.end;\r\n\r\n        let topleft_c = this.instance.pixelToCanvas(element.element, topleft);\r\n        let bottomright_c = this.instance.pixelToCanvas(\r\n          element.element,\r\n          bottomright\r\n        );\r\n\r\n        this.cornerstonetools_instance.clearToolState(\r\n          element.element,\r\n          \"RectangleRoi\"\r\n        );\r\n        this.instance.renderGrayscaleImage(element, true);\r\n        callback(topleft_c, bottomright_c);\r\n      }.bind(this);\r\n    }\r\n\r\n  }\r\n\r\n}","import { Framework } from \"../framework.js\";\r\n\r\nimport { Util } from \"../util.js\";\r\n\r\n\r\n\r\nexport class CanvasFallback extends Framework {\r\n  constructor() {\r\n    super();\r\n    this.name = \"canvasFallback\";\r\n  }\r\n\r\n  get_canvas() {\r\n    let canvases = document.querySelectorAll('canvas');\r\n    let largestCanvas = canvases[0];\r\n    let largestArea = largestCanvas.width * largestCanvas.height;\r\n\r\n    for (let i = 1; i < canvases.length; i++) {\r\n        let area = canvases[i].width * canvases[i].height;\r\n        if (area > largestArea) {\r\n            largestCanvas = canvases[i];\r\n            largestArea = area;\r\n        }\r\n    }\r\n\r\n    return largestCanvas;\r\n  }\r\n\r\n  get_image(from_canvas) {\r\n\r\n    let canvas = this.get_canvas();\r\n\r\n    let ctx = canvas.getContext(\"2d\");\r\n\r\n    let image = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    let rgba_image = Util.rgba_to_grayscale(image.data);\r\n\r\n    if (from_canvas) {\r\n      return { data: image.data, width: image.width, height: image.height };\r\n    } else {\r\n      return { data: rgba_image, width: image.width, height: image.height };\r\n    }\r\n  }\r\n\r\n  set_image(new_pixels) {\r\n    let originalcanvas = this.get_canvas();\r\n\r\n    let newcanvas = window.document.createElement(\"canvas\");\r\n\r\n    newcanvas.width = originalcanvas.width;\r\n    newcanvas.height = originalcanvas.height;\r\n\r\n    let ctx = newcanvas.getContext(\"2d\");\r\n\r\n    let newPixelsRgba = Util.grayscale_to_rgba(new_pixels);\r\n\r\n    let newPixelsClamped = new Uint8ClampedArray(newPixelsRgba);\r\n\r\n    let newImageData = new ImageData(\r\n      newPixelsClamped,\r\n      newcanvas.width,\r\n      newcanvas.height\r\n    );\r\n\r\n    // Draw the new image data onto the canvas\r\n    ctx.putImageData(newImageData, 0, 0);\r\n\r\n    newcanvas.onclick = function () {\r\n      // on click, we will restore the nv canvas\r\n      newcanvas.parentNode.replaceChild(originalcanvas, newcanvas);\r\n    };\r\n\r\n    // replace nv canvas with new one\r\n    originalcanvas.parentNode.replaceChild(newcanvas, originalcanvas);\r\n  }\r\n\r\n  set_mask(new_mask) {\r\n    let image = this.get_image(true);\r\n\r\n    let originalcanvas = this.get_canvas();\r\n\r\n    let newcanvas = window.document.createElement('canvas');\r\n\r\n    newcanvas.width = originalcanvas.width;\r\n    newcanvas.height = originalcanvas.height;\r\n\r\n    let ctx = newcanvas.getContext('2d');\r\n\r\n    let imageclamped = new Uint8ClampedArray(image.data);\r\n\r\n    let newImageData = new ImageData(\r\n      imageclamped,\r\n      newcanvas.width,\r\n      newcanvas.height\r\n    );\r\n\r\n    // Draw the new image data onto the canvas\r\n    ctx.putImageData(newImageData, 0, 0);\r\n\r\n    image = ctx.getImageData(0, 0, newcanvas.width, newcanvas.height);\r\n\r\n    let masked_image = Util.harden_mask(image.data, new_mask);\r\n\r\n    let masked_image_as_imagedata = new ImageData(\r\n      masked_image,\r\n      newcanvas.width,\r\n      newcanvas.height\r\n    );\r\n\r\n    ctx.putImageData(masked_image_as_imagedata, 0, 0);\r\n\r\n    originalcanvas.parentNode.replaceChild(newcanvas, originalcanvas);\r\n  }\r\n\r\n  select_box(callback) {\r\n    let scriptBoxCraft = document.createElement(\"script\");\r\n    scriptBoxCraft.type = \"text/javascript\";\r\n    scriptBoxCraft.src = \"https://boostlet.org/dist/boxcraft.min.js\";\r\n    // scriptBoxCraft.src = \"https://shrutivarade.github.io/BoxCraft/dist/boxCraft.min.js\";\r\n    // scriptBoxCraft.src = \"https://shrutivarade.github.io/boostlet/dist/boxcraft.min.js\";\r\n    // scriptBoxCraft.src = \"http://localhost:8000/dist/boxcraft.min.js\";\r\n    let canvas = this.get_canvas();\r\n    document.head.appendChild(scriptBoxCraft);\r\n\r\n    scriptBoxCraft.onload = function() {\r\n\r\n      BoxCraft.createDraggableBBox(canvas, function (topleft, bottomright) {\r\n        console.log(\"Inside Draggable BBox\", topleft, bottomright);\r\n        callback(topleft, bottomright);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import {Framework} from '../framework.js';\r\n\r\nimport {Util} from '../util.js';\r\nimport {CanvasFallback} from './canvasFallback.js';\r\n\r\nexport class NiiVue extends Framework {\r\n  \r\n  constructor(instance) {\r\n\r\n    super(instance);\r\n    this.name = 'niivue';\r\n    this.canvasFallback = new CanvasFallback();\r\n\r\n    this.flip_on_png = true;\r\n\r\n    this.onMouseDown = false;\r\n    this.x1 = null;\r\n    this.y1 = null;\r\n    this.x2 = null;\r\n    this.y2 = null;\r\n\r\n  }\r\n\r\n  get_image(from_canvas) {\r\n\r\n    let element = this.instance.canvas;\r\n    let pixels = null;\r\n    let width = null;\r\n    let height = null;\r\n\r\n\r\n    // TODO this is hacky going through the canvas\r\n    // later should grab the real volume data\r\n\r\n    let old_crosshaircolor = this.instance.opts.crosshairColor;\r\n    let old_crosshairwidth = this.instance.opts.crosshairWidth;\r\n\r\n    this.instance.setCrosshairColor([0,0,0,0]);\r\n    this.instance.opts.crosshairWidth=0;\r\n    this.instance.updateGLVolume();\r\n\r\n\r\n    let ctx = this.instance.gl;\r\n\r\n    \r\n    width = ctx.drawingBufferWidth;\r\n    height = ctx.drawingBufferHeight;\r\n\r\n    pixels = new Uint8Array(width * height * 4);\r\n    ctx.readPixels(\r\n      0, \r\n      0, \r\n      width, \r\n      height, \r\n      ctx.RGBA, \r\n      ctx.UNSIGNED_BYTE, \r\n      pixels);\r\n\r\n    // restore crosshairs\r\n    this.instance.setCrosshairColor(old_crosshaircolor);\r\n    this.instance.opts.crosshairWidth = old_crosshairwidth;\r\n\r\n    if (!Util.is_defined(from_canvas)) {\r\n\r\n      // convert rgba pixels to grayscale\r\n      pixels = Util.rgba_to_grayscale(pixels);\r\n\r\n    } else {\r\n\r\n      // TODO\r\n      // not easily possible yet\r\n      // we could hack it using \r\n      // nv.back.get_value(x,y,z)\r\n      // based on the dimensions\r\n      // nv.back.dims.slice(1);\r\n      // but devs promised easy access in the future\r\n\r\n    }\r\n\r\n\r\n    return {'data':pixels, 'width':width, 'height':height};\r\n\r\n  }\r\n\r\n  /**\r\n   * Sets the NiiVue.js image.\r\n   * \r\n   * If is_rgba==true, we do *not* convert to RGBA before setting on canvas.\r\n   **/\r\n  set_image(new_pixels, is_rgba, no_flip) {\r\n\r\n    // TODO this is hacky since we dont work with the real volume yet\r\n    // create new canvas\r\n    // put pixels on canvas\r\n    // show canvas\r\n    // hide on click\r\n\r\n    let originalcanvas = this.instance.canvas;\r\n\r\n    let newcanvas = window.document.createElement('canvas');\r\n    newcanvas.width = originalcanvas.width;\r\n    newcanvas.height = originalcanvas.height;\r\n\r\n    // put new_pixels down\r\n    let ctx = newcanvas.getContext('2d');\r\n\r\n    let new_pixels_rgba = null;\r\n\r\n    if (Util.is_defined(is_rgba)) {\r\n\r\n      new_pixels_rgba = new_pixels;\r\n\r\n    } else {\r\n\r\n      new_pixels_rgba = Util.grayscale_to_rgba(new_pixels);\r\n\r\n\r\n    }\r\n\r\n    let new_pixels_clamped = new Uint8ClampedArray(new_pixels_rgba);\r\n\r\n    let new_image_data = new ImageData(new_pixels_clamped, newcanvas.width, newcanvas.height);\r\n    \r\n\r\n    ctx.putImageData(new_image_data, 0, 0);\r\n\r\n    if (!Util.is_defined(no_flip)) {\r\n      // some flipping action\r\n      ctx.save();\r\n      ctx.scale(1, -1);\r\n      ctx.drawImage(newcanvas, 0, -newcanvas.height);\r\n      ctx.restore();\r\n    }\r\n\r\n\r\n    newcanvas.onclick = function() {\r\n\r\n      // on click, we will restore the nv canvas\r\n      newcanvas.parentNode.replaceChild(originalcanvas, newcanvas);\r\n\r\n    }\r\n\r\n    // replace nv canvas with new one\r\n    // originalcanvas.parentNode.replaceChild(newcanvas, originalcanvas);\r\n    newcanvas.style.width = originalcanvas.clientWidth+'px';\r\n    newcanvas.style.height = originalcanvas.clientHeight+'px';\r\n    originalcanvas.parentNode.replaceChild(newcanvas, originalcanvas);\r\n\r\n  }\r\n\r\n  set_mask(new_mask) {\r\n\r\n    // merge image + mask\r\n    // and then call set_image with that information\r\n\r\n    let image = this.get_image(true);\r\n\r\n    // TODO here we need to flip one more time, this is until\r\n    // we use the official niivue infrastructure for adding\r\n    // a segmentation layer\r\n    let originalcanvas = this.instance.canvas;\r\n\r\n    let newcanvas = window.document.createElement('canvas');\r\n    newcanvas.width = originalcanvas.width;\r\n    newcanvas.height = originalcanvas.height;\r\n    // put new_pixels down\r\n    let ctx = newcanvas.getContext('2d');\r\n    let imageclamped = new Uint8ClampedArray(image.data);\r\n    let imagedata = new ImageData(imageclamped, image.width, image.height);\r\n    ctx.putImageData(imagedata, 0, 0);\r\n    ctx.save();\r\n    ctx.scale(1, -1);\r\n    ctx.drawImage(newcanvas, 0, -newcanvas.height);\r\n    ctx.restore();\r\n    image = ctx.getImageData(0, 0, newcanvas.width, newcanvas.height);\r\n    // end of flip\r\n\r\n    let masked_image = Util.harden_mask(image.data, new_mask);\r\n\r\n    this.set_image(masked_image, true, true); // rgba data, no flip\r\n\r\n\r\n  }\r\n\r\n  select_box(callback) {\r\n    return this.canvasFallback.select_box(callback);\r\n\r\n  }\r\n\r\n}\r\n","import {Framework} from '../framework.js';\r\n\r\nimport {Util} from '../util.js';\r\n\r\nimport {CanvasFallback} from './canvasFallback.js';\r\n\r\nexport class OpenSeaDragon extends Framework {\r\n    constructor(instance) {\r\n        super(instance);\r\n        this.name = 'opensedragon';\r\n        this.canvasFallback = new CanvasFallback();\r\n\r\n    }\r\n\r\n    get_image(from_canvas) {\r\n        return this.canvasFallback.get_image(from_canvas);\r\n    }\r\n\r\n    set_image(new_pixels) {\r\n        return this.canvasFallback.set_image(new_pixels);\r\n    }\r\n\r\n    set_mask(new_mask) {\r\n        // return this.canvasFallback.set_mask(new_mask);\r\n\r\n        let viewer = null;\r\n        let vs = this.instance._viewers;\r\n        vs.forEach(function (e) {\r\n          if (e.id == \"viewer\") {\r\n            viewer = e;\r\n          }\r\n        });\r\n\r\n        if (!viewer) {\r\n          throw \"OpenSeaDragon viewer not found.\";\r\n        }\r\n\r\n        let canvas = viewer.canvas.children[0];\r\n        width = canvas.width;\r\n        height = canvas.height;\r\n\r\n        let ctx = canvas.getContext(\"2d\");\r\n        let imagedata = ctx.getImageData(0, 0, width, height);\r\n        let pixels = imagedata.data;\r\n\r\n        let masked_image = Util.harden_mask(pixels, new_mask);\r\n        let masked_image_as_imagedata = new ImageData(masked_image, width, height);\r\n        ctx.putImageData(masked_image_as_imagedata, 0, 0);\r\n    }\r\n\r\n    select_box(callback) {\r\n\r\n      console.log(\"Using Boxcraft library to handle box selection.\");\r\n      let viewer = null;\r\n      let vs = this.instance._viewers;\r\n      vs.forEach(function (e) {\r\n        if (e.id == \"viewer\") {\r\n          viewer = e;\r\n        }\r\n      });\r\n\r\n      if (!viewer) {\r\n        throw \"OpenSeaDragon viewer not found.\";\r\n      }\r\n\r\n      let canvas = viewer.canvas;\r\n\r\n      BoxCraft.createDraggableBBox(canvas, function (topleft, bottomright) {\r\n        callback(topleft, bottomright);\r\n      });\r\n\r\n    }\r\n\r\n    \r\n\r\n}\r\n  \r\n","import { Framework } from \"../framework.js\";\r\n\r\nimport { Util } from \"../util.js\";\r\n\r\nimport { CanvasFallback } from \"./canvasFallback.js\";\r\n\r\nexport class Xtk extends Framework {\r\n  constructor(instance) {\r\n    super(instance);\r\n    this.name = \"xtk\";\r\n    this.canvasFallback = new CanvasFallback();\r\n  }\r\n\r\n  get_image(from_canvas) {\r\n    return this.canvasFallback.get_image(from_canvas);\r\n  }\r\n\r\n  set_image(new_pixels) {\r\n    return this.canvasFallback.set_image(new_pixels);\r\n  }\r\n\r\n  set_mask(new_mask) {\r\n    return this.canvasFallback.set_mask(new_mask);\r\n  }\r\n\r\n  select_box(callback) {\r\n    return this.canvasFallback.select_box(callback);\r\n  }\r\n}\r\n","import { Framework } from \"../framework.js\";\r\n\r\nimport { Util } from \"../util.js\";\r\n\r\nimport { CanvasFallback } from \"./canvasFallback.js\";\r\n\r\nexport class Papaya extends Framework {\r\n  constructor(instance) {\r\n    super(instance);\r\n    this.name = \"papaya\";\r\n    this.canvasFallback = new CanvasFallback();\r\n  }\r\n\r\n  get_image(from_canvas) {\r\n    return this.canvasFallback.get_image(from_canvas);\r\n  }\r\n\r\n  set_image(new_pixels) {\r\n    return this.canvasFallback.set_image(new_pixels);\r\n  }\r\n\r\n  set_mask(new_mask) {\r\n    return this.canvasFallback.set_mask(new_mask);\r\n  }\r\n\r\n  select_box(callback) {\r\n    return this.canvasFallback.select_box(callback);\r\n  }\r\n}\r\n","\r\nimport {Boostlet} from \"./boostlet.js\"\r\n\r\nwindow.console.log('BOOSTLET VERSION 0.1-beta');\r\n\r\n// register global namespace with a new boostlet instance\r\n// later we might want to support multiple active boostlets\r\nwindow.Boostlet = new Boostlet();\r\n","import {Util} from './util.js';\r\n\r\nimport {Framework} from './framework.js';\r\n\r\nexport class Boostlet {\r\n\r\n  constructor() {\r\n    this.framework = null;\r\n    this.categories = [];\r\n    this.examples = new Map();\r\n  }\r\n\r\n  /**\r\n   * Initializes the Boostlet.\r\n   * \r\n   * This includes several steps such as identifying the \r\n   * visualization/rendering framework that is available. \r\n   * \r\n   * TODO: Later we want to have fallbacks in place if the framework\r\n   * is not detected.\r\n   * \r\n   */\r\n  init(name, instance) {\r\n\r\n    if (typeof name != 'undefined' && typeof instance != 'undefined') {\r\n\r\n      console.log('Framework forced by user!');\r\n      throw \"Forced Framework Not Implemented.\";\r\n      // TODO\r\n\r\n    } else {\r\n\r\n      this.framework = Util.detect_framework();\r\n\r\n    }\r\n\r\n    if (this.framework) {\r\n\r\n      console.log('Found', this.framework, '!')\r\n    \r\n    } else {\r\n\r\n      throw \"Framework Not Found.\";\r\n\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Let's the user select a region of interest box.\r\n   */\r\n  async select_box(callback) {\r\n\r\n    this.framework.select_box(callback);\r\n\r\n  }\r\n\r\n  /**\r\n   * Let's the user select (multiple) seeds.\r\n   */\r\n  async select_seed(howmany) {\r\n\r\n    throw \"Missing Implementation.\";\r\n\r\n  }\r\n\r\n  /**\r\n   * Loads an external javascript file asynchronously. \r\n   */\r\n  async load_script(url, callback) {\r\n\r\n    Util.load_script(url, callback);\r\n\r\n  }\r\n\r\n  /**\r\n   * Sends a HTTP POST request to a url with some data.\r\n   */\r\n  async send_http_post(url, data, callback) {\r\n\r\n    Util.send_http_post(url, data, callback);\r\n\r\n  }\r\n\r\n  /**\r\n   * Gets the current image (2D).\r\n   * \r\n   * TODO: Optional bounding box should be supported.\r\n   * \r\n   */\r\n  get_image(from_canvas) {\r\n\r\n    return this.framework.get_image(from_canvas);\r\n\r\n  }\r\n\r\n  /**\r\n   * Sets the current image (2D).\r\n   * \r\n   */\r\n  set_image(new_pixels) {\r\n\r\n    return this.framework.set_image(new_pixels);\r\n\r\n  }\r\n\r\n  /**\r\n   * Sets the current mask (2D).\r\n   * \r\n   */\r\n  set_mask(new_mask) {\r\n\r\n    return this.framework.set_mask(new_mask);\r\n\r\n  }\r\n\r\n  /**\r\n   * Encode raw image data to PNG.\r\n   */\r\n  convert_to_png(uint8array, width, height) {\r\n\r\n    return this.framework.convert_to_png(uint8array, width, height);\r\n\r\n  }\r\n\r\n  filter(pixels, width, height, kernel) {\r\n\r\n    return Util.filter(pixels, width, height, kernel);\r\n\r\n  }\r\n\r\n  /**\r\n   * Displays a small div located at the top left     corner of the screen with message and will disappear after the specified time (ms).\r\n   * \r\n   */\r\n  hint(message, duration) {\r\n\r\n    return Util.hint(message, duration);\r\n\r\n  }\r\n\r\n}\r\n"],"names":[],"version":3,"file":"boostlet.min.js.map"}